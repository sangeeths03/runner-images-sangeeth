default_platform(:ios)

platform :ios do
  before_all do |lane, _options|
    setup_ci if [:beta, :distribution_deploy_dev, :distribution_deploy_recette, :distribution_deploy_staging].include?(lane)

    # Only run pods if Podfile changed or first time
    if !File.exist?("Pods/Manifest.lock") || File.mtime("Podfile") > File.mtime("Pods/Manifest.lock")
      puts "Installing/updating pods..."
      cocoapods(
        try_repo_update_on_error: true,
        podfile: "./Podfile", # assumes Podfile is at repo root
        clean_install: true,
        verbose: true
      )
    else
      puts "Pods up to date, skipping installation"
    end
  end

  desc "Get version from BUILD_NUMBER"
  lane :increment_version do
    build_number = ENV["BUILD_NUMBER"] || "1"
    increment_build_number(build_number: build_number)
  end

  desc "Prepare archive for AppStore or TestFlight"
  lane :prepare_archive do
    increment_version
    version = ENV["APP_VERSION"] || get_version_number()
    increment_version_number(version_number: version)
  end

  desc "Deploy Beta for TestFlight - local testing mode (no signing)"
  lane :beta do
    puts "=== Beta lane started at #{Time.now} ==="

    # 1️⃣ Select Xcode dynamically based on runner OS
    if ENV['AGENT_SPEC'] == 'macos-14'
      xcode_select("/Applications/Xcode_16.2.app")
    elsif ENV['AGENT_SPEC'] == 'macos-15'
      xcode_select("/Applications/Xcode_16.4.app")
    else
      xcode_select("/Applications/Xcode.app")
    end

    # 2️⃣ Clean build to avoid stale DerivedData issues
    sh("xcodebuild clean -workspace ./Fastlanedemoapp.xcworkspace -scheme Fastlanedemoapp -configuration Release")

    # 3️⃣ Prepare archive (increment version numbers)
    prepare_archive

    # 4️⃣ Build app with Release configuration
    puts "=== Build phase started at #{Time.now} ==="
    build_app(
      workspace: "./Fastlanedemoapp.xcworkspace",
      scheme: "Fastlanedemoapp",
      clean: true,
      configuration: "Release",        # Force Release build for Alamofire
      export_method: "app-store",
      include_symbols: true,
      include_bitcode: true,
      skip_codesigning: true           # Skip signing for local testing
    )
    puts "=== Build phase completed at #{Time.now} ==="

    puts "=== Beta lane finished at #{Time.now} ==="
  end
end
